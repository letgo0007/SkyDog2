/******************************************************************************
 * @file    app_plimit_cmd.h
 *
 * PLIMIT function build-in parameter database.
 *
 * @pre     Relay on [app_plimit.h]
 *
 * @history
 * Date     | Author  | Comment
 * ------------------------------------
 * 20161212 | Yang.Zf | Initial Version
 *****************************************************************************/

#ifndef APP_APP_PLIMIT_DB_H_
#define APP_APP_PLIMIT_DB_H_

#include "app_plimit.h"

/******************************************************************************
 * !@brief  Default Parameter .
 *          PLIMIT Function is OFF , parameter complete & set to safe value for the function.
 *          Gamma is linear.
 *
 * Date     | Author  | Model       | Work Mode | Note
 * ---------------------------------------------------------------------------
 * 20161212 | Yang.Zf | Default     | Default   | Initial Version.
 *
 *****************************************************************************/
static const HI_U16 PLIMIT_DUTY_TEMPSAFE_DEFAULT[PLIMIT_CH_MAX] =
{
/*ROW0 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW1 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW2 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW3 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW4 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW5 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW6 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW7 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW8 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW9 */0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW10*/0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW11*/0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW12*/0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW13*/0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW14*/0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW15*/0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, };

static const HI_U16 PLIMIT_GAMMA_DEFAULT[256] =
{ /*0x000*/0x0000, 0x0010, 0x0020, 0x0030, 0x0040, 0x0050, 0x0060, 0x0070,
/*0x080*/0x0080, 0x0090, 0x00A0, 0x00B0, 0x00C0, 0x00D0, 0x00E0, 0x00F0,
/*0x100*/0x0100, 0x0110, 0x0120, 0x0130, 0x0140, 0x0150, 0x0160, 0x0170,
/*0x180*/0x0180, 0x0190, 0x01A0, 0x01B0, 0x01C0, 0x01D0, 0x01E0, 0x01F0,
/*0x200*/0x0200, 0x0210, 0x0220, 0x0230, 0x0240, 0x0250, 0x0260, 0x0270,
/*0x280*/0x0280, 0x0290, 0x02A0, 0x02B0, 0x02C0, 0x02D0, 0x02E0, 0x02F0,
/*0x300*/0x0300, 0x0310, 0x0320, 0x0330, 0x0340, 0x0350, 0x0360, 0x0370,
/*0x380*/0x0380, 0x0390, 0x03A0, 0x03B0, 0x03C0, 0x03D0, 0x03E0, 0x03F0,
/*0x400*/0x0400, 0x0410, 0x0420, 0x0430, 0x0440, 0x0450, 0x0460, 0x0470,
/*0x480*/0x0480, 0x0490, 0x04A0, 0x04B0, 0x04C0, 0x04D0, 0x04E0, 0x04F0,
/*0x500*/0x0500, 0x0510, 0x0520, 0x0530, 0x0540, 0x0550, 0x0560, 0x0570,
/*0x580*/0x0580, 0x0590, 0x05A0, 0x05B0, 0x05C0, 0x05D0, 0x05E0, 0x05F0,
/*0x600*/0x0600, 0x0610, 0x0620, 0x0630, 0x0640, 0x0650, 0x0660, 0x0670,
/*0x680*/0x0680, 0x0690, 0x06A0, 0x06B0, 0x06C0, 0x06D0, 0x06E0, 0x06F0,
/*0x700*/0x0700, 0x0710, 0x0720, 0x0730, 0x0740, 0x0750, 0x0760, 0x0770,
/*0x780*/0x0780, 0x0790, 0x07A0, 0x07B0, 0x07C0, 0x07D0, 0x07E0, 0x07F0,
/*0x800*/0x0800, 0x0810, 0x0820, 0x0830, 0x0840, 0x0850, 0x0860, 0x0870,
/*0x880*/0x0880, 0x0890, 0x08A0, 0x08B0, 0x08C0, 0x08D0, 0x08E0, 0x08F0,
/*0x900*/0x0900, 0x0910, 0x0920, 0x0930, 0x0940, 0x0950, 0x0960, 0x0970,
/*0x980*/0x0980, 0x0990, 0x09A0, 0x09B0, 0x09C0, 0x09D0, 0x09E0, 0x09F0,
/*0xA00*/0x0A00, 0x0A10, 0x0A20, 0x0A30, 0x0A40, 0x0A50, 0x0A60, 0x0A70,
/*0xA80*/0x0A80, 0x0A90, 0x0AA0, 0x0AB0, 0x0AC0, 0x0AD0, 0x0AE0, 0x0AF0,
/*0xB00*/0x0B00, 0x0B10, 0x0B20, 0x0B30, 0x0B40, 0x0B50, 0x0B60, 0x0B70,
/*0xB80*/0x0B80, 0x0B90, 0x0BA0, 0x0BB0, 0x0BC0, 0x0BD0, 0x0BE0, 0x0BF0,
/*0xC00*/0x0C00, 0x0C10, 0x0C20, 0x0C30, 0x0C40, 0x0C50, 0x0C60, 0x0C70,
/*0xC80*/0x0C80, 0x0C90, 0x0CA0, 0x0CB0, 0x0CC0, 0x0CD0, 0x0CE0, 0x0CF0,
/*0xD00*/0x0D00, 0x0D10, 0x0D20, 0x0D30, 0x0D40, 0x0D50, 0x0D60, 0x0D70,
/*0xD80*/0x0D80, 0x0D90, 0x0DA0, 0x0DB0, 0x0DC0, 0x0DD0, 0x0DE0, 0x0DF0,
/*0xE00*/0x0E00, 0x0E10, 0x0E20, 0x0E30, 0x0E40, 0x0E50, 0x0E60, 0x0E70,
/*0xE80*/0x0E80, 0x0E90, 0x0EA0, 0x0EB0, 0x0EC0, 0x0ED0, 0x0EE0, 0x0EF0,
/*0xF00*/0x0F00, 0x0F10, 0x0F20, 0x0F30, 0x0F40, 0x0F50, 0x0F60, 0x0F70,
/*0xF80*/0x0F80, 0x0F90, 0x0FA0, 0x0FB0, 0x0FC0, 0x0FD0, 0x0FE0, 0x0FF0, };

static const tPlimit_Param g_stPlimitParam_Default =
{
    .PlimitEn = 0x00,
    .ChAmount = 128 ,
    .ChCol = 16,
    .ChRow = 8 ,
    .ChDcShareMode = DC_SHARE_NONE,
    .FrameRate = 60 ,
    .FramePerSample = 60 ,
    .GammaTable = (HI_U16*)PLIMIT_GAMMA_DEFAULT ,
    .TempLowGap = 15,
    .TempHighGap = 5,
    .CoefD = 0.986f * PLIMIT_COEF_BASE,
    .CoefR = 0.01f * PLIMIT_COEF_BASE,
    .DutyTempSafePtr = (HI_U16*)PLIMIT_DUTY_TEMPSAFE_DEFAULT ,
    .LocalDutyMax = 0x0FFF ,
    .LocalDutyLimitGap = 0x0FFF ,
    .GlobalCurrent = 0xFF ,
    .GlobalDutyMax = 0x0FFF ,
    .StepLimitDown = 0x00FF ,
    .StepLimitUp = 0x00FF
};

/******************************************************************************
 * !@brief  Parameter for 60SU860A @ 350mA.
 *
 * Date     | Author  | Model       | Work Mode | Note
 * ---------------------------------------------------------------------------
 * 20161212 | Yang.Zf | 60SU860A    | 350mA     | Initial Version.
 *
 *****************************************************************************/
static const HI_U16 PLIMIT_DUTY_TEMPSAFE_60SU860A_350MA[60] =
{
/*ROW0*/
0x0900, 0x0911, 0x0922, 0x0933, 0x0944, 0x0955,
/*ROW1*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW2*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW3*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW4*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW5*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW6*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW7*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW8*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900,
/*ROW9*/
0x0900, 0x0900, 0x0900, 0x0900, 0x0900, 0x0900 };

static const tPlimit_Param g_stPlimitParam_60SU860A_350mA =
{
    .PlimitEn = 0x7F,
    .ChAmount = 60 ,
    .ChCol = 6,
    .ChRow = 10 ,
    .ChDcShareMode = DC_SHARE_NONE,
    .FrameRate = 60 ,
    .FramePerSample = 60 ,
    .TempLowGap = 15,
    .TempHighGap = 5,
    .CoefD = 0.986f * PLIMIT_COEF_BASE,
    .CoefR = 1.350f * PLIMIT_COEF_BASE,
    .DutyTempSafePtr = (HI_U16*)PLIMIT_DUTY_TEMPSAFE_60SU860A_350MA ,
    .LocalDutyMax = 0x0E00 ,
    .LocalDutyLimitGap = 0x0200 ,
    .GlobalCurrent = 0xAF ,
    .GlobalDutyMax = 0x0A00 ,
    .StepLimitDown = 0x0050 ,
    .StepLimitUp = 0x0050
};

/******************************************************************************
 * !@brief  Parameter for 60SU860A @ 250mA.
 *
 * Date     | Author  | Model       | Work Mode | Note
 * ---------------------------------------------------------------------------
 * 20161212 | Yang.Zf | 60SU860A    | 250mA     | Initial Version.
 *
 *****************************************************************************/
static const HI_U16 PLIMIT_DUTY_TEMPSAFE_60SU860A_250MA[60] =
{
/*ROW0*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW1*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW2*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW3*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW4*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW5*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW6*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW7*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW8*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00,
/*ROW9*/
0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, 0x0C00, };

static const tPlimit_Param g_stPlimitParam_60SU860A_250mA =
{
    .PlimitEn = 0x7F,
    .ChAmount = 60 ,
    .ChCol = 6,
    .ChRow = 10 ,
    .ChDcShareMode = DC_SHARE_NONE,
    .FrameRate = 60 ,
    .FramePerSample = 60 ,
    .TempLowGap = 40 + 25,
    .TempHighGap = 50 + 25,
    .CoefD = 0.986f * PLIMIT_COEF_BASE,
    .CoefR = 1.350f * PLIMIT_COEF_BASE,
    .DutyTempSafePtr = (HI_U16*)PLIMIT_DUTY_TEMPSAFE_60SU860A_250MA ,
    .LocalDutyMax = 0x0E00 ,
    .LocalDutyLimitGap = 0x0300 ,
    .GlobalCurrent = 0xAF ,
    .GlobalDutyMax = 0x0A00 ,
    .StepLimitDown = 0x0050 ,
    .StepLimitUp = 0x0050
};

/******************************************************************************
 * !@brief  Parameter for 60SU860A @ 150mA.
 *
 * Date     | Author  | Model       | Work Mode | Note
 * ---------------------------------------------------------------------------
 * 20161212 | Yang.Zf | 60SU860A    | 150mA     | Initial Version.
 *
 *****************************************************************************/
static const HI_U16 PLIMIT_DUTY_TEMPSAFE_60SU860A_150MA[60] =
{
/*ROW0*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW1*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW2*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW3*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW4*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW5*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW6*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW7*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW8*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF,
/*ROW9*/
0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, 0x0FFF, };

static const tPlimit_Param g_stPlimitParam_60SU860A_150mA =
{
    .PlimitEn = 0x7F,
    .ChAmount = 60 ,
    .ChCol = 6,
    .ChRow = 10 ,
    .ChDcShareMode = DC_SHARE_NONE,
    .FrameRate = 60 ,
    .FramePerSample = 60 ,
    .TempLowGap = 40 + 25,
    .TempHighGap = 50 + 25,
    .CoefD = 0.986f * PLIMIT_COEF_BASE,
    .CoefR = 1.350f * PLIMIT_COEF_BASE,
    .DutyTempSafePtr = (HI_U16*)PLIMIT_DUTY_TEMPSAFE_60SU860A_150MA ,
    .LocalDutyMax = 0x0E00 ,
    .LocalDutyLimitGap = 0x0300 ,
    .GlobalCurrent = 0xAF ,
    .GlobalDutyMax = 0x0A00 ,
    .StepLimitDown = 0x0050 ,
    .StepLimitUp = 0x0050
};

/*!@brief   Build Database.
 * Index | Model       | Work Mode  | Note
 * ---------------------------------------------------------------------------
 * 0x00  | Default     | Default    |
 * 0x01  | 60SU860A    | 350mA      |
 * 0x02  | 60SU860A    | 250mA      |
 * 0x03  | 60SU860A    | 150mA      |
 * ---------------------------------------------------------------------------
 */
static tPlimit_Db g_stPlimitDb =
{   .current_index = 0,
    .total_index = 4,
    .pstParamList[0x00] = (tPlimit_Param *)&g_stPlimitParam_Default,
    .pstParamList[0x01] = (tPlimit_Param *)&g_stPlimitParam_60SU860A_350mA,
    .pstParamList[0x02] = (tPlimit_Param *)&g_stPlimitParam_60SU860A_250mA,
    .pstParamList[0x03] = (tPlimit_Param *)&g_stPlimitParam_60SU860A_150mA,
};



#endif /* APP_APP_PLIMIT_DB_H_ */
